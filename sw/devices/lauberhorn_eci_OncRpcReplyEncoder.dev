
/*
 * lauberhorn_eci_OncRpcReplyEncoder.dev: register description of lauberhorn_eci_OncRpcReplyEncoder.
 * !! AUTO-GENERATED FILE, DO NOT EDIT !!
 *
 * Describes registers exposed over the CSR interface as well as datatypes of
 * various descriptors in memory.
 *
 * Register blocks are broken into multiple devices to allow:
 *  - software to index repeating blocks;
 *  - better grouping of registers of the same purpose.
 */
import lauberhorn_eci;

device lauberhorn_eci_OncRpcReplyEncoder lsbfirst (addr base) "OncRpcReplyEncoder block for lauberhorn_eci" {
register ctrl_sess_idx wo addr(base, 0x0) "Index of session table entry to update" type(uint64);
register ctrl_sess_func_ptr wo addr(base, 0x8) "Session table update funcPtr" type(uint64);
register ctrl_sess_xid wo addr(base, 0x10) "Session table update xid" type(uint64);
register ctrl_sess_client_addr wo addr(base, 0x18) "Session table update clientAddr" type(uint64);
register ctrl_sess_client_port wo addr(base, 0x20) "Session table update clientPort" type(uint64);
register ctrl_sess_server_port wo addr(base, 0x28) "Session table update serverPort" type(uint64);
register ctrl_sess_active wo addr(base, 0x30) "Session table update active" type(uint64);
register stat_sess_readback_idx wo addr(base, 0x38) "Index of session table entry to read back" type(uint64);
register stat_sess_readback_func_ptr ro addr(base, 0x40) "Session table readback funcPtr" type(uint64);
register stat_sess_readback_xid ro addr(base, 0x48) "Session table readback xid" type(uint64);
register stat_sess_readback_client_addr ro addr(base, 0x50) "Session table readback clientAddr" type(uint64);
register stat_sess_readback_client_port ro addr(base, 0x58) "Session table readback clientPort" type(uint64);
register stat_sess_readback_server_port ro addr(base, 0x60) "Session table readback serverPort" type(uint64);
register stat_sess_readback_active ro addr(base, 0x68) "Session table readback active" type(uint64);
register stat_sess_tbl_full ro addr(base, 0x70) "Number of times session table became full and entry 0 was overridden" type(uint64);
register stat_dropped ro addr(base, 0x78) "Number of dropped requests due to missing session" type(uint64);

};
