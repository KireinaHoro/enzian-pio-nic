stages:
  - test
  - build-sw
  - build-hw
  - release

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"

.docker-image:
  tags:
    - enzian-docker
    - vivado
  image: "registry.ethz.ch/project-openenzian/ci-images/pionic-tools:latest"

fast-tests:
  extends: .docker-image
  stage: test
  script:
    - mill gen.test -l org.scalatest.tags.Slow -l pionic.tags.Formal

.build-sw:
  extends: .docker-image
  stage: build-sw
  script:
    - mill $PIONIC_DESIGN.generateVerilog
    - make -C sw/$PIONIC_DESIGN

build-sw-pcie:
  extends: .build-sw
  variables:
    PIONIC_DESIGN: pcie

build-sw-eci:
  extends: .build-sw
  variables:
    PIONIC_DESIGN: eci

.build-hw:
  extends: .docker-image
  stage: build-hw
  needs:
    - fast-tests
  before_script:
    - source /opt/Xilinx/Vivado/2023.2/settings64.sh
  script:
    - mill --no-server $PIONIC_DESIGN.generateBitstream
  variables:
    - LD_PRELOAD: /lib/x86_64-linux-gnu/libudev.so.1

build-hw-pcie:
  extends: .build-hw
  variables:
    PIONIC_DESIGN: pcie
  artifacts:
    when: always
    paths:
      - out/pcie/vivadoProject.dest/*.log
      - out/pcie/vivadoProject.dest/pio-nic-pcie/pio-nic-pcie.runs/impl_1/pio-nic-pcie.bit
      - out/pcie/vivadoProject.dest/pio-nic-pcie/pio-nic-pcie.runs/impl_1/pio-nic-pcie.ltx
      - out/pcie/vivadoProject.dest/pio-nic-pcie/pio-nic-pcie.runs/impl_1/design_1_wrapper_postroute_physopt.dcp

# # WIP: pull static shell release
# build-hw-eci:
#   extends: .build-hw
#   before_script:
#     - curl <... download static shell dcp ...>
#   variables:
#     PIONIC_DESIGN: eci
#     ENZIAN_SHELL_DIR: <fill in here>
#   artifacts:
#     paths:
#       - out/eci/vivadoProject.dest/shell_pio-nic-eci_routed.dcp
#       - out/eci/vivadoProject.dest/shell_pio-nic-eci.bit
#       - out/eci/vivadoProject.dest/shell_pio-nic-eci.ltx

# release:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest
#   rules:
#     - if: '$CI_COMMIT_TAG'
#   needs:
#     - job: build_bitstream
#       artifacts: true
#   release:
#     tag_name: '$CI_COMMIT_TAG'
#     description: 'Release for version $CI_COMMIT_TAG'
